{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww20260\viewh12820\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
Motion Sense\
\
\
An application that will monitor a region of interest and  report on changes to that region, I.e. objects entering.\
\
\
This application is implemented in two parts: a client application running on a single board computer and mobile application that receives updates.\
\
The client application  reads frames from the camera. It acquires a point cloud from a frame  ( a set  of 3D vertices at a given time), and compares them to subsequent frames.\
If a frame is sufficiently different, this difference is determined to be an object that has entered the scene.  The object is uploaded to a database.  The mobile application receives the changes in scene and displays them.\
\
\
1 - Every predetermined period of time a whole frame is uploaded for reference to the database.\
2 - Objects entering the region of interest are uploaded when they are detected.\
3 - After a predetermined period of time, an object that has entered the scene stops being reported.\
4 - Another application monitors changes and reports them to \
\
\
The client application is written in C++ and uses a MongoDB database to store information.\
The monitoring application is written using Stitch.\
\
}